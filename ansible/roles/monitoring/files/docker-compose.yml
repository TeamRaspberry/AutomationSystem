version: '3.7'

services:
  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./web.config.yml:/etc/prometheus/web.config.yml:ro
      - prometheus_data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9091:9090"
    networks:
      - monitoring
    command:
      - '--storage.tsdb.retention.size=10GB' # размер хранилища
      - '--storage.tsdb.retention.time=15d' # время хранения
      - '--storage.tsdb.max-block-duration=2h' # максимальный размер блока
      - '--config.file=/etc/prometheus/prometheus.yml' # путь к конфигурационному файлу
      - '--storage.tsdb.path=/prometheus' # путь к хранилищу
      - '--web.config.file=/etc/prometheus/web.config.yml'
      - '--web.enable-admin-api' # включение API администратора
      - '--web.enable-lifecycle' # включение жизненного цикла
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1.5G
        reservations:
          cpus: '0.2'
          memory: 256M
    user: "root"

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_DATAPROXY_TIMEOUT=30
      - GF_DATAPROXY_SEND_USER_HEADER=true
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/etc/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:v1.9.0
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.cpu'
      - '--collector.meminfo'
      - '--collector.loadavg'
      - '--collector.filesystem'
    ports:
      - "9100:9100"
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
